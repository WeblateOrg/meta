#!/usr/bin/env python3

# Copyright © Michal Čihař <michal@weblate.org>
#
# SPDX-License-Identifier: CC0-1.0

"""Synchronizes pre-commit config for Weblate repositories."""

import subprocess
import sys
from pathlib import Path

import ruamel.yaml

REMOVE_REPOS = [
    "https://github.com/asottile/pyupgrade",
    "https://github.com/psf/black",
    "https://github.com/PyCQA/isort",
    "https://github.com/adamchainz/blacken-docs",
]
SYNC_REPOS = [
    "https://github.com/astral-sh/ruff-pre-commit",
    "https://github.com/executablebooks/mdformat",
    "https://github.com/rhysd/actionlint",
    "https://github.com/zizmorcore/zizmor-pre-commit",
    "https://github.com/gitleaks/gitleaks",
]

yaml = ruamel.yaml.YAML()
yaml.indent = 2
yaml.preserve_quotes = False
yaml.width = sys.maxsize

# Load template
template_path = Path(__file__).parent / ".pre-commit-config.yaml"
with template_path.open() as handle:
    template = yaml.load(handle)
template_repos = {repo["repo"]: repo for repo in template["repos"]}

# Load target
with open(sys.argv[1]) as handle:
    data = yaml.load(handle)

changed = False

# Remove no longer wanted
remove = [
    offset for offset, repo in enumerate(data["repos"]) if repo["repo"] in REMOVE_REPOS
]
if remove:
    for offset in reversed(remove):
        del data["repos"][offset]
    changed = True

# Apply fixups
missing = set(SYNC_REPOS)
for offset, repo in enumerate(data["repos"]):
    if repo["repo"] in missing:
        missing.remove(repo["repo"])
        if template_repos[repo["repo"]] != repo:
            data["repos"][offset] = template_repos[repo["repo"]]
            changed = True


# Add missing
for name in missing:
    data["repos"].append(template_repos[name])
    changed = True

# Save changed file
if changed:
    with open(sys.argv[1], "w") as handle:
        yaml.dump(data, handle)

    subprocess.run(
        ["pre-commit", "run", "--files", sys.argv[1]], check=False, capture_output=True
    )
